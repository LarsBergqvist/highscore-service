# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
  branches:
    include:
    - main
    - net6-upgrade

pool:
  vmImage: "windows-latest"

variables:
  solution: "**/*.sln"
  buildPlatform: "Any CPU"
  buildConfiguration: "Release"

steps:

  - task: UseDotNet@2
    displayName: "Install .NET Core SDK"
    inputs:
      version: 6.x
      performMultiLevelLookup: true
      includePreviewVersions: true # Required for preview versions

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: "$(solution)"

  - task: DotNetCoreCLI@2
    displayName: Build solution
    inputs:
      command: "build"
      arguments: "-c $(buildConfiguration)"

  - task: DotNetCoreCLI@2
      displayName: dotnet test
      inputs:
        command: test
        arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
        projects: 'tests/**/*.csproj'
        nobuild: true

  - script: |
      dotnet tool install -g dotnet-reportgenerator-globaltool
      reportgenerator -reports:$(Build.SourcesDirectory)/tests/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
    displayName: Create Code coverage report

  - task: DotNetCoreCLI@2
    displayName: Publish API
    inputs:
      command: publish
      publishWebProjects: false
      projects: "**/Api.csproj"
      arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory) --no-build"
      zipAfterPublish: false

  - task: PublishBuildArtifacts@1
    displayName: "Publish api artifacts"
    inputs:
      PathtoPublish: "$(build.artifactstagingdirectory)/Api"
      ArtifactName: Api
